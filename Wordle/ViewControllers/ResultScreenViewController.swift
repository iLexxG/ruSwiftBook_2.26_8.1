//
//  ResultScreenViewController.swift
//  Wordle
//
//  Created by –°–µ—Ä–≥–µ–π –ò–≤–∞–Ω–æ–≤ on 29.03.2022.
//

import UIKit

class ResultScreenViewController: UITableViewController {
    var currentUser: PlayerProfile!
    var playerResults: [String] = []
    
    override func viewDidLoad() {
        super.viewDidLoad()
        navigationItem.title = currentUser.playerUsername
    }

    override func tableView(_ tableView: UITableView, titleForHeaderInSection section: Int) -> String? {
        "–í–∞—à —Ä–µ–∑—É–ª—å—Ç–∞—Ç:"
    }
    
    // MARK: - Table view data source
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        4
    }

    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let currentCell = tableView.dequeueReusableCell(withIdentifier: "gameResult", for: indexPath)
        var content = currentCell.defaultContentConfiguration()
        
        if currentUser.wordIsGuessed {
            playerResults.append("–í—ã –æ—Ç–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ! üëç")
            playerResults.append("–î–∞, —ç—Ç–æ \"\(currentUser.currentWordle)\"")
            playerResults.append("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫: \(currentUser.succsesAttempt + 1)")
            playerResults.append("–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: \(currentUser.difficultLevel)")
        } else {
            playerResults.append("–í—ã –Ω–µ –æ—Ç–≥–∞–¥–∞–ª–∏ —Å–ª–æ–≤–æ ü§¶‚Äç‚ôÇÔ∏è")
            playerResults.append("–ê —ç—Ç–æ \"\(currentUser.currentWordle)\"")
            playerResults.append("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤: \(currentUser.guessedLetters)")
            playerResults.append("–£—Ä–æ–≤–µ–Ω—å —Å–ª–æ–∂–Ω–æ—Å—Ç–∏: \(currentUser.difficultLevel)")
        }
        
        for index in 0..<tableView.numberOfRows(inSection: 0) {
            if indexPath.row == index {
                content.text = playerResults[index]
            }
        }
        
        currentCell.contentConfiguration = content
        return currentCell
    }
}
